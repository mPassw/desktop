name: "Create release build"

on:
    workflow_dispatch:
        inputs:
            version_bump:
                description: "Version bump type"
                required: true
                type: choice
                options:
                    - patch
                    - minor
                    - major
                default: "patch"

jobs:
    bump-version:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Configure Git
              run: |
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git config --global user.name "github-actions[bot]"

            - name: Bump version
              run: npm version ${{ inputs.version_bump }} --no-git-tag-version

            - name: Commit version bump
              run: |
                  git add package.json
                  git commit -m "chore: bump version to $(npm pkg get version | tr -d '\"')"

            - name: Tag commit
              run: git tag v$(npm pkg get version | tr -d '"')

            - name: Push changes and tags
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  tags: true
                  branch: ${{ github.ref }}

    build:
        needs: bump-version
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "macos-latest"
                      args: "--target aarch64-apple-darwin"
                    - platform: "macos-latest"
                      args: "--target x86_64-apple-darwin"
                    - platform: "ubuntu-22.04"
                      args: ""
                    - platform: "windows-latest"
                      args: ""

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: setup bun
              uses: oven-sh/setup-bun@v2

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: install frontend dependencies
              run: bun install

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
              with:
                  tagName: v__VERSION__
                  releaseName: "v__VERSION__"
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}
